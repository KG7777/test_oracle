--ресурс - информация о наличии животных
--таблица о животных
CREATE TABLE "TERS"."TEST_ANIMALS" 
   ( "ID_A" NUMBER NOT NULL ENABLE, 
 "TYPE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
 "NAME_A" VARCHAR2(20 BYTE), 
 "ID_P" NUMBER NOT NULL ENABLE, 
  CONSTRAINT "TEST_ANIMALS_PK" PRIMARY KEY ("ID_A")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
  CONSTRAINT "TEST_ANIMALS_FK1" FOREIGN KEY ("ID_P")
   REFERENCES "TERS"."TEST_PEOPLE" ("ID_P") ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;

  CREATE OR REPLACE TRIGGER "TERS"."TEST_ANIMALS_TRG" before
  INSERT ON TEST_ANIMALS  FOR EACH row BEGIN IF inserting THEN IF :NEW.ID_A IS NULL THEN
  SELECT TEST_ANIMALS_SEQ.nextval INTO :NEW.ID_A FROM dual;
END IF;
END IF;
END;
/
--триггер при вставки/удалении данных из таблицы
ALTER TRIGGER "TERS"."TEST_ANIMALS_TRG" ENABLE;

  CREATE OR REPLACE TRIGGER "TERS"."TEST_ANIMALS_AUDIT_TRG" 
AFTER INSERT OR DELETE
ON TEST_ANIMALS
FOR EACH ROWDECLARE
   v_id VARCHAR2(500);  -- Переменная для формирования строки лога
BEGIN   IF INSERTING THEN
      v_id := 'id_a:' || :NEW.ID_A 
                  '; type:'  :NEW.TYPE 
                  '; name_a:'  :NEW.NAME_A 
                  '; id_p:'  :NEW.ID_P;

      INSERT INTO TEST_HISTORY_CHANGE_DATA (
         DATA,
         TYPE,
         NAME_TABLE,
         LOGIN,
         ID
      ) VALUES (
         SYSDATE,          -- Текущая дата и время
         'insert',         -- Тип операции
         'TEST_ANIMALS',   -- Название таблицы
         USER,             -- Текущий пользователь
         v_id        -- Данные записи
      );

   -- Обработка DELETE (удаление записи)
   ELSIF DELETING THEN
      v_id := 'id_a:' || :OLD.ID_A 
                  '; type:'  :OLD.TYPE 
                  '; name_a:'  :OLD.NAME_A 
                  '; id_p:'  :OLD.ID_P;

      INSERT INTO TEST_HISTORY_CHANGE_DATA (
         DATA,
         TYPE,
         NAME_TABLE,
         LOGIN,
         ID
      ) VALUES (
         SYSDATE,          -- Текущая дата и время
         'delete',         -- Тип операции
         'TEST_ANIMALS',   -- Название таблицы
         USER,             -- Текущий пользователь
         v_id        -- Данные записи
      );
   END IF;
END;
/
ALTER TRIGGER "TERS"."TEST_ANIMALS_AUDIT_TRG" ENABLE;

--таблица отделов
CREATE TABLE "TERS"."TEST_DEP" 
   ( "ID_D" NUMBER NOT NULL ENABLE, 
 "NAME_DEP" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
 "CHIEF_DEP" NUMBER, 
  CONSTRAINT "TEST_DEP_PK" PRIMARY KEY ("ID_D")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
  CONSTRAINT "TEST_DEP_UK1" UNIQUE ("NAME_DEP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
  CONSTRAINT "TEST_DEP_FK_CHIEF" FOREIGN KEY ("CHIEF_DEP")
   REFERENCES "TERS"."TEST_PEOPLE" ("ID_P") ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;

  CREATE OR REPLACE TRIGGER "TERS"."TEST_DEP_TRG" before
  INSERT ON TEST_DEP  FOR EACH row BEGIN IF inserting THEN IF :NEW.ID_D IS NULL THEN
  SELECT TEST_DEP_SEQ.nextval INTO :NEW.ID_D FROM dual;
END IF; 
END IF;
END;
/
ALTER TRIGGER "TERS"."TEST_DEP_TRG" ENABLE;

CREATE OR REPLACE TRIGGER "TERS"."TEST_DEP_AUDIT_TRG" 
AFTER INSERT OR DELETE
ON TEST_DEP
FOR EACH ROWDECLARE
   v_log_data VARCHAR2(500);  -- Переменная для записи данных
BEGIN   -- Логирование INSERT (добавление записи)
   IF INSERTING THEN
      v_log_data := 'id_d:' || :NEW.ID_D 
                  '; name_dep:'  :NEW.NAME_DEP 
                  '; chief_dep:'  :NEW.CHIEF_DEP;

      INSERT INTO TEST_HISTORY_CHANGE_DATA (
         DATA,
         TYPE,
         NAME_TABLE,
         LOGIN,
         ID
      ) VALUES (
         SYSDATE,          -- Текущая дата и время
         'insert',         -- Тип операции
         'TEST_DEP',       -- Название таблицы
         USER,             -- Текущий пользователь
         v_log_data        -- Данные записи
      );

   -- Логирование DELETE (удаление записи)
   ELSIF DELETING THEN
      v_log_data := 'id_d:' || :OLD.ID_D 
                  '; name_dep:'  :OLD.NAME_DEP 
                  '; chief_dep:'  :OLD.CHIEF_DEP;

      INSERT INTO TEST_HISTORY_CHANGE_DATA (
         DATA,
         TYPE,
         NAME_TABLE,
         LOGIN,
         ID
      ) VALUES (
         SYSDATE,          -- Текущая дата и время
         'delete',         -- Тип операции
         'TEST_DEP',       -- Название таблицы
         USER,             -- Текущий пользователь
         v_log_data        -- Данные записи
      );
   END IF;
END;
/
ALTER TRIGGER "TERS"."TEST_DEP_AUDIT_TRG" ENABLE;

--таблица для добавления/удаления доступа к ресурсу
CREATE TABLE "TERS"."TEST_DOST" 
   ( "GRANTED_AT" NUMBER NOT NULL ENABLE, 
 "DATE_GRANTED" TIMESTAMP (6), 
 "GRANTED_BY" NUMBER NOT NULL ENABLE, 
 "ID_P" NUMBER NOT NULL ENABLE, 
  CONSTRAINT "TEST_DOST_UK1" UNIQUE ("GRANTED_AT", "GRANTED_BY", "ID_P")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;

--таблица логов изменений в таблицах(для триггеров)
CREATE TABLE "TERS"."TEST_HISTORY_CHANGE_DATA" 
   ( "DATA" TIMESTAMP (6) NOT NULL ENABLE, 
 "TYPE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
 "NAME_TABLE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
 "LOGIN" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
 "ID" VARCHAR2(200 BYTE) NOT NULL ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;

--таблица логов ошибок
CREATE TABLE "TERS"."TEST_LOG_ERROR" 
   ( "DATA" TIMESTAMP (6) NOT NULL ENABLE, 
 "KOD" NUMBER NOT NULL ENABLE, 
 "EXCEPT_MESS" VARCHAR2(500 BYTE) NOT NULL ENABLE, 
 "ERR_LOCATION" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
 "LOGIN" VARCHAR2(20 BYTE) NOT NULL ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;

--таблица сотрудников
CREATE TABLE "TERS"."TEST_PEOPLE" 
   ( "ID_P" NUMBER NOT NULL ENABLE, 
 "FAM" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
 "NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
 "ID_D" NUMBER NOT NULL ENABLE, 
  CONSTRAINT "TEST_PEOPLE_PK" PRIMARY KEY ("ID_P")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
  CONSTRAINT "TEST_PEOPLE_FK1" FOREIGN KEY ("ID_D")
   REFERENCES "TERS"."TEST_DEP" ("ID_D") ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;

  CREATE OR REPLACE TRIGGER "TERS"."TEST_PEOPLE_TRG" before
  INSERT ON TEST_PEOPLE  FOR EACH row BEGIN IF inserting THEN IF :NEW.ID_P IS NULL THEN
  SELECT TEST_PEOPLE_SEQ.nextval INTO :NEW.ID_P FROM dual;
END IF;
END IF;
END;
/
ALTER TRIGGER "TERS"."TEST_PEOPLE_TRG" ENABLE;

  CREATE OR REPLACE TRIGGER "TERS"."TEST_PEOPLE_AUDIT_TRG" 
AFTER INSERT OR DELETE
  ON TEST_PEOPLE
  FOR EACH ROWDECLARE
   v_id VARCHAR2(300);
BEGIN   IF INSERTING THEN
      v_id := 'id:':new.ID_P'; fam:':new.FAM'; name:':new.NAME'; dep:'||:new.ID_D;
      INSERT INTO TEST_HISTORY_CHANGE_DATA
      (DATA,
       TYPE,
       NAME_TABLE,
       LOGIN,
       ID) 
      VALUES
      ( 
       sysdate,
       'insert',
       'TEST_PEOPLE',
       user,
       v_id
      );
   ELSIF DELETING THEN
      v_id := 'id:':old.ID_P'; fam:':old.FAM'; name:':old.NAME'; dep:'||:old.ID_D;
      INSERT INTO TEST_HISTORY_CHANGE_DATA
      (DATA,
       TYPE,
       NAME_TABLE,
       LOGIN,
       ID) 
      VALUES
      ( 
       sysdate,
       'delete',
       'TEST_PEOPLE',
       user,
       v_id
      );
   END IF;
END;
/
ALTER TRIGGER "TERS"."TEST_PEOPLE_AUDIT_TRG" ENABLE;

--таблица ограничений доступа
CREATE TABLE "TERS"."TEST_RESTRICT_ACCESS" 
   ( "ID_P" NUMBER NOT NULL ENABLE, 
 "RESTRICT_BY" NUMBER NOT NULL ENABLE, 
 "RESTRICT_AT" NUMBER NOT NULL ENABLE, 
 "DATE_RESTRICT" TIMESTAMP (6), 
 "TYPE" VARCHAR2(20 BYTE), 
  CONSTRAINT "TEST_RESTRICT_ACCESS_UK1" UNIQUE ("ID_P", "RESTRICT_AT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
